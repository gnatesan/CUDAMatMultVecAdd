# -*- coding: utf-8 -*-
"""q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CX-zuM7YRAeaCAB7m1HfhjQl2NDCyxQT
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from pprint import pprint

import matplotlib.pyplot as plt

x = [1, 5, 10, 50, 100]
y_1 = [0.096252, 0.298393, 0.597825, 2.985808, 5.973126]
y_2 = [0.001841, 0.006713, 0.013380, 0.066654, 0.133771]
y_3 = [0.000060, 0.000249, 0.000483, 0.002362, 0.004693]
y_cpu = [0.00641715, 0.0220439, 0.0390664, 0.188053, 0.369846]

plt.ylabel('Execution time (seconds log-scaled)')
plt.xlabel('K value (millions)')
plt.title('Non Unified Memory')
plt.yscale('log')

# Determine y-ticks appropriate for log scale
y_ticks = np.logspace(np.log10(min(min(y_1), min(y_2), min(y_3))), np.log10(max(max(y_1), max(y_2), max(y_3))), num=5)

y_tick_labels = ['{:.2e}'.format(tick) for tick in y_ticks]

plt.yticks(y_ticks, y_tick_labels)

plt.plot(x, y_1, marker='.', label='1 Block 1 Thread')
plt.plot(x, y_2, marker='.', label='1 Block 256 Threads')
plt.plot(x, y_3, marker='.', label='K/256 Blocks 256 Threads')
plt.plot(x, y_cpu, marker='.', label='CPU')

plt.legend()
plt.show()

x = [1, 5, 10, 50, 100]
y_1 = [0.093935, 0.298731, 0.597548, 2.987550, 5.979285]
y_2 = [0.001861, 0.006694, 0.013360, 0.066710, 0.133865]
y_3 = [0.000058, 0.000244, 0.000478, 0.002354, 0.004690]
y_cpu = [0.00641715, 0.0220439, 0.0390664, 0.188053, 0.369846]

plt.ylabel('Execution time (seconds log-scaled)')
plt.xlabel('K value (millions)')
plt.title('Unified Memory')
plt.yscale('log')

y_ticks_2 = [0.00006, 0.00107, 0.0189, 0.336, 5.97]

y_tick_labels = ['{:.2e}'.format(tick) for tick in y_ticks_2]

plt.yticks(y_ticks_2, y_tick_labels)

plt.plot(x, y_1, marker='.', label='1 Block 1 Thread')
plt.plot(x, y_2, marker='.', label='1 Block 256 Threads')
plt.plot(x, y_3, marker='.', label='K/256 Blocks 256 Threads')
plt.plot(x, y_cpu, marker='.', label='CPU')

plt.legend()
plt.show()